<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="threadMapper">
    <!-- home에 표시되는 threadList -->
    <select id="getThreads">
        SELECT p.*, u.nickname, u.img_url AS userimg , COUNT(c.comment_id) AS commentCnt
        FROM post p
        LEFT OUTER JOIN user u ON p.user_id = u.user_id
        LEFT OUTER JOIN comment c ON p.post_id = c.post_id
        GROUP BY p.post_id, p.title, p.content, p.created, p.img_name, p.img_url, p.like, p.modified, p.user_id, u.nickname, u.img_url
        ORDER BY ${orderCommend} ${orderby}
        <if test="offset >= 0">
            LIMIT 4 OFFSET ${offset}
        </if>
    </select>

    <!-- thread 본문 -->
    <select id="getThread" parameterType="int">
        SELECT post.post_id AS postId, post.title AS postTitle, post.content AS postContent, post.img_url AS postImg, post.img_name AS postImgName, post.created AS postCreated, post.modified AS postModified, post.like AS postLike,
        user.nickname AS postWriteUser, user.img_url AS  postWriteUserImgUrl
        FROM post
        LEFT OUTER JOIN user ON post.user_id = user.user_id
        <where>
            post.post_id = #{threadid}
        </where>
    </select>

    <!-- thread 댓글 -->
    <select id="getThreadComment" parameterType="int">
        SELECT comment.comment_id AS commentId, comment.parent_num AS commentParentNum, comment.content AS commentContent,
        comment.created AS commentCreated, comment.modified AS commentModified, comment.like AS commentLike,
        user.nickname AS commentWriteUser, user.img_url AS commentWriteUserImgUrl
        FROM comment
        LEFT OUTER JOIN user ON comment.user_id = user.user_id
        <where>
            comment.post_id = #{threadid}
        </where>
        ORDER BY comment.created DESC
    </select>

    <!-- thread 삭제 -->
    <delete id="deleteThread" parameterType="int">
        DELETE FROM post WHERE post_id = #{threadid}
    </delete>

    <!-- thread삭제시 모든 comment 삭제 -->
    <delete id="deleteThreadComment" parameterType="int">
        DELETE FROM comment WHERE post_id = #{threadid}
    </delete>

    <!-- thread 저장 -->
    <insert id="postThread">
        INSERT INTO post(title, content, created, user_id)
        VALUES(#{postTitle}, #{postContent}, now(), #{userId})
    </insert>

    <!-- thread 수정 -->
    <update id="updateThread">
        UPDATE post
        SET title = #{postTitle}, content = #{postContent}, modified = now()
        WHERE post_id = #{threadid}
    </update>

    <!-- 좋아요 버튼 -->
    <update id="incrementLike" parameterType="int">
        UPDATE post
        SET `like` = COALESCE(`like`, 0) + 1
        WHERE post_id = #{threadid}
    </update>

    <!-- comment 저장 -->
    <insert id="postComment">
        INSERT INTO comment(content, created, user_id, post_id, parent_num)
        VALUES(#{commentContent}, now(), #{userId}, #{threadid}, #{commentParentNum})
    </insert>

    <!-- comment 수정 -->
    <update id="patchComment">
        UPDATE comment SET content = #{commentContent}, modified = now()
        WHERE comment_id = #{commentId}
    </update>

    <!-- commentDelete -->
    <delete id="deleteComment" parameterType="int">
        DELETE FROM comment WHERE comment_id = #{commentId} OR parent_num = #{commentId}
    </delete>

    <!-- comment좋아요 버튼 -->
    <update id="commentLike" parameterType="int">
        UPDATE comment
        SET `like` = COALESCE(`like`, 0) + 1
        WHERE comment_id = #{commentId}
    </update>

    <select id="selectCountAll">
        SELECT COUNT(*) AS postCount FROM post
    </select>
</mapper>